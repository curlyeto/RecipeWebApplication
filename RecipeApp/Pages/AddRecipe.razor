@page "/addrecipe"
@using RecipeApp.Services;
@using RecipeApp.Helper
@inject IRecipeService recipeService;
@inject NavigationManager navigationManager;
@inject IJSRuntime JsRuntime

<PageTitle>Add Recipe</PageTitle>

<div class="form-group mb-2">
    <label for="exampleFormControlFile1">Image</label>
    <input type="text" class="form-control" id="image" placeholder="Enter Image Link" @bind="image">
</div>
<div class="form-group mb-2">
    <label for="exampleInputEmail1">Name</label>
    <input type="text" class="form-control" id="name" aria-describedby="emailHelp" placeholder="Enter Name" @bind="name">
</div>
<div class="form-group mb-2">
    <label for="exampleInputPassword1">Integrates</label>
    <textarea type="text" class="form-control" id="integrates" placeholder="Enter Integrates" rows="7" @bind="integrates" />

</div>
<div class="form-group mb-2">
    <label for="exampleInputPassword1">Instruction</label>
    <textarea type="text" class="form-control" id="instruction" placeholder="Enter Instruction" rows="7" @bind="instruction" />
</div>

<button type="submit" class=" btn btn-primary" @onclick="OnAddRecipe">Add Reciepe</button>

@code {
    private string image;
    private string name;
    private string integrates;
    private string instruction;
    private string localStorageData;

    private async void OnAddRecipe()
    {
        UIHelper uIHelper = new UIHelper(JsRuntime);

        string userId = await uIHelper.readLocalStorage("userId");
    
        
        var response = await recipeService.addRecipe(image, name, integrates, instruction, int.Parse(userId));
        string responseContent = await response.Content.ReadAsStringAsync();
        navigationManager.NavigateTo("/");
        Console.WriteLine("Response Content: " + responseContent);
        
    }
}
