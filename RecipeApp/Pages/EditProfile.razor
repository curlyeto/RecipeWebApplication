@page "/editprofile"
@using RecipeApp.Helper;
@using RecipeApp.Services;
@inject IUserServicese userService;
@inject IJSRuntime JsRuntime
<PageTitle>Edit Profile</PageTitle>

<div class="form-group mb-2">
    <label for="exampleFormControlFile1">Image</label>
    <input type="text" class="form-control" id="exampleInputName" aria-describedby="emailHelp" placeholder="Enter Image" @bind="image">
</div>
<div class="form-group mb-2">
    <label for="exampleInputEmail1">Name</label>
    <input type="text" class="form-control" id="exampleInputName" aria-describedby="emailHelp" placeholder="Enter Name" @bind="name">
</div>

<div class="form-group mb-2">
    <label for="exampleInputEmail1">Last Name</label>
    <input type="text" class="form-control" id="exampleInputLastName" aria-describedby="emailHelp" placeholder="Enter Last Name" @bind="lastName">
</div>
<div class="form-group mb-2">
    <label for="exampleInputEmail1">Email</label>
    <input type="email" class="form-control" id="exampleInputEmail" aria-describedby="emailHelp" placeholder="Enter Email" @bind="email">
</div>
<div class="form-group mb-2">
    <label for="exampleInputEmail1">Password</label>
    <input type="password" class="form-control" id="exampleInputPassword" aria-describedby="emailHelp" placeholder="Enter Passowrd" @bind="password">
</div>
<div class="form-group mb-2">
    <label for="exampleInputEmail1">Password Reset</label>
    <input type="password" class="form-control" id="exampleInputPasswordReset" aria-describedby="emailHelp" placeholder="Enter Passowrd Reset" @bind="passwordReset">
</div>

<button type="submit" class=" btn btn-primary" @onclick="OnEditProfile">Edit Profile</button>
@code {
    private string name;
    private string lastName;
    private string email;
    private string password;
    private string passwordReset;
    private string image;
    private string userId;

    protected override async Task OnInitializedAsync()
    {
        await getUserWithId();

    }
    private async Task getUserWithId()
    {
        UIHelper uIHelper = new UIHelper(JsRuntime);

        userId = await uIHelper.readLocalStorage("userId");
        var response = await userService.getUser(int.Parse(userId));
        image = response.Photo;
        name = response.FirstName;
        lastName = response.LastName;
        email = response.Email;
        password = response.Password;
        passwordReset = response.Password;

        Console.WriteLine("Recipe List Count " + response.FirstName);
    }
    private async void OnEditProfile()
    {
        Console.WriteLine("OnEditProfile Click");
        if(password == passwordReset)
        {
            var response = await userService.EditUser(name, lastName, image, email, password, int.Parse(userId));
            string responseContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Response Content: " + responseContent);
        }

    }
}
